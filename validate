#!/usr/bin/env node

'use strict';

let program = require( 'commander' );
let pkg = require( './package' );
let fs = require( 'fs' );
let validator = require( './src/validator' );

let _getFileContents = filePath => {
    return new Promise( function( resolve, reject ) {
        fs.readFile( filePath, 'utf8', function( err, xform ) {
            if ( err ) {
                if ( err.code === 'ENOENT' ) {
                    err = 'File: ' + filePath + ' does not exist.';
                }
                reject( err );
            } else {
                resolve( xform );
            }
        } );
    } );
};

let validate = xformContent => validator.validate( xformContent );

program
    .usage( '[options] <file>' )
    .version( pkg.version )
    .option( '-m, --me', 'get personal validation' )
    .parse( process.argv );

let xformFile = program.args[ 0 ];

if ( program.me ) {
    console.log( 'You are correct.\nYour feelings matter.\nYou are wonderful and the world is better with you in it.' );
    process.exit( 1 );
} else if ( xformFile ) {
    console.log( 'validating ' + xformFile );

    _getFileContents( xformFile )
        .then( validate )
        .catch( function( errors = [] ) {
            console.error( errors.join('\n') );
            console.log( '\nResult: Invalid' );
            process.exit( 1 );
        } )
        .then( function( warnings = [] ) {
            console.log( warnings.join( '\n' ) );
            console.log( '\n>> XForm is valid! See above for any warnings.' );
            process.exit( 0 );
        } );

} else {
    console.log( 'Nothing to do. No XForm File provided. Use --help flag to see manual.' );
}
